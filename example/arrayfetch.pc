/* {{{

    This file is part of libtraceproc - a library for tracing Pro*C/OCI calls

    Copyright (C) 2013 Georg Sauthoff <mail@georg.so>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

}}} */


#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include <sqlca.h>
EXEC ORACLE OPTION (ORACA=YES);
EXEC SQL INCLUDE ORACA; 

#include "proc_util.h"
#include "ora_util.h"
#include "ret_check.h"

static int arrayfetch()
{
  EXEC ORACLE OPTION (char_map=string);

  EXEC SQL DECLARE arr_curs CURSOR FOR
    SELECT station_id, lufttemperatur FROM tageswerte_tbl
      WHERE
        lufttemperatur != -999;

  EXEC SQL OPEN arr_curs;
  IFSQLRET(0, -1);

  struct Row {
    char station_id[8];
    char lufttemperatur[8];
  };
  typedef struct Row Row;
  Row rows[1024] = {0};

  size_t last_fetched = 0;
  do {
    EXEC SQL FETCH arr_curs INTO :rows;
    if (sqlca.sqlcode != 1403)
      IFSQLRET(0, -1);
    size_t fetched = sqlca.sqlerrd[2];
    size_t n = fetched-last_fetched;
    last_fetched = fetched;
    size_t i = 0;
    for (i=0; i<n; ++i) {
      printf("%7s;%7s\n", rows[i].station_id, rows[i].lufttemperatur);
    }
  } while (!sqlca.sqlcode);

  EXEC SQL CLOSE arr_curs;
  IFSQLRET(0, -1);

  return 0;
}

int main(int argc, char **argv)
{
  int ret = proc_connect();
  IFTRUERET(ret, 0, 1);

  ret = ora_reset_signals();
  IFTRUERET(ret, 0, 1);

  EXEC SQL ALTER SESSION SET sql_trace=true;
  IFSQLRET(0, 1);
  EXEC SQL ALTER SESSION SET tracefile_identifier='ausweis';
  IFSQLRET(0, 1);

  ret = arrayfetch();
  IFTRUERET(ret, 0, 1);

  ret = proc_disconnect_commit();
  IFTRUERET(ret, 0, 1);

  return 0;
}
